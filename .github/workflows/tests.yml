name: Test

on:
  push:
    branches: [master]
  pull_request:
    # Check all PR

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, ubuntu-16.04, ubuntu-18.04]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: configure macOS-10.15 environnement
        if: matrix.os == 'macOS-10.15'
        run: |
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
          echo "FC=gfortran-9" >> $GITHUB_ENV
      - name: configure ubuntu-16.04 environnement
        if: matrix.os == 'ubuntu-16.04'
        run: |
          sudo apt install g++-4.9 gfortran-4.9
          echo "CC=gcc-4.9" >> $GITHUB_ENV
          echo "CXX=g++-4.9" >> $GITHUB_ENV
          echo "FC=gfortran-4.9" >> $GITHUB_ENV
      - name: configure ubuntu-18.04 environnement
        if: matrix.os == 'ubuntu-18.04'
        run: |
          echo "CC=gcc-9" >> $GITHUB_ENV
          echo "CXX=g++-9" >> $GITHUB_ENV
          echo "FC=gfortran-9" >> $GITHUB_ENV
      - name: configure cmake
        run: |
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=debug -DCHFL_FORTRAN_BUILD_TESTS=ON ..
      - name: enable coverage
        if: matrix.os == 'ubuntu-16.04'
        run: |
          python -m pip install --upgrade pip
          pip install codecov
          cd build && cmake -DCHFL_CODE_COVERAGE=ON .
      - name: build code
        run: cd build && make -j2
      - name: run tests
        run: cd build && ctest --output-on-failure
      - name: run extra checks
        run: |
          ./scripts/check-tests.py
          ./scripts/check-docs.py
      - name: upload coverage
        if: matrix.os == 'ubuntu-16.04'
        run: codecov --gcov-exec=gcov-4.9
